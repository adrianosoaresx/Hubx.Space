# Generated by Django 5.2.2 on 2025-07-14 14:21

import django.contrib.auth.validators
from django.db import migrations, models

import accounts.models


def fill_missing_emails(apps, schema_editor):
    User = apps.get_model("accounts", "User")
    for user in User.objects.filter(models.Q(email__isnull=True) | models.Q(email="")):
        user.email = f"user{user.pk}@placeholder.invalid"
        user.save(update_fields=["email"])


class Migration(migrations.Migration):
    dependencies = [
        ("accounts", "0018_username_unique_constraint"),
    ]

    operations = [
        migrations.AlterModelManagers(
            name="user",
            managers=[
                ("objects", accounts.models.CustomUserManager()),
            ],
        ),
        migrations.AlterField(
            model_name="user",
            name="email",
            field=models.EmailField(
                db_index=True, max_length=254, unique=True, verbose_name="email address"
            ),
        ),
        migrations.AlterField(
            model_name="user",
            name="username",
            field=models.CharField(
                error_messages={"unique": "A user with that username already exists."},
                help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                max_length=150,
                validators=[django.contrib.auth.validators.UnicodeUsernameValidator()],
                verbose_name="username",
                unique=False,
            ),
        ),
        migrations.RunPython(fill_missing_emails, migrations.RunPython.noop),
    ]
